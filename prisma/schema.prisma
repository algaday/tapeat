
generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  email String @unique
  password  String
  firstName String
  lastName  String
  owner RestaurantOwner?
}

model RestaurantOwner {
  id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId String @unique @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  restaurant Restaurant?
  
  user   User @relation(fields: [userId], references: [id])
}

model Customer{
  id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name String
  phoneNumberId String @unique @db.Uuid
  address String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  
  orders Order[]
  phoneNumber PhoneNumber @relation(fields: [phoneNumberId], references: [id])
}

model PhoneNumber{
  id String @id @default(uuid()) @db.Uuid
  countryCode String @default("+7")
  number String

  customer Customer?
}

model Restaurant{
  id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name String
  ownerId String @unique @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  owner RestaurantOwner @relation(fields: [ownerId], references: [userId])

  branches RestaurantBranch[]
  orders Order[]
  menus MenuItem[]
  modificationGroupds ModificationGroup[]
  deliveryFee DeliveryTemplateFee[]
  categories MenuItemCategory[]
}

model RestaurantBranch{
  id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  address String
  restaurantId String @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  
  branchMenuItems BranchMenuItem[]
  
  restaurant Restaurant @relation(fields: [restaurantId],  references: [id])
}

model MenuItem{
  id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nameOfDish String
  categoryId String @db.Uuid
  description String
  price Decimal @db.Decimal(12,2)
  restaurantId String @db.Uuid
  imageId String @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  restaurant Restaurant @relation(fields: [restaurantId], references: [id])
  image Image @relation(fields: [imageId], references: [id])
  category MenuItemCategory @relation(fields: [categoryId],  references: [id], onDelete: Cascade)

  orderItems OrderItem[]
  modificationGroups MenuItemModificationGroup[]
  branchMenuItems BranchMenuItem[]
}

model BranchMenuItem{
  id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  branchRestaurantId String @db.Uuid
  menuItemId String @db.Uuid
  isAvailable Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  branchRestaurant RestaurantBranch @relation(fields: [branchRestaurantId], references: [id])
  menuItem MenuItem @relation(fields: [menuItemId], references: [id])
}

model Image{
  id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  restaurantId String? @db.Uuid
  originalPath String
  mediumThumbnailPath String?
  smallThumbnailPath String?
  isAssigned Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  menuItems MenuItem[]
}

model MenuItemModificationGroup{
  id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  menuItemId String @db.Uuid
  modificationId String @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  menuItem MenuItem @relation(fields: [menuItemId], references: [id], onDelete: Cascade)
  modificationGroup ModificationGroup @relation(fields: [modificationId], references: [id], onDelete: Cascade)
}
model ModificationGroup {
  id String @id @default(uuid()) @db.Uuid
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  restaurantId String @db.Uuid
  isMultipleChoice Boolean @default(false)
  isMandatory Boolean @default(false)
  menuItem MenuItemModificationGroup[]
  modifications Modification[]

  restaurant Restaurant? @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
}

model Modification {
  id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  modificationGroupId String @db.Uuid
  name String
  price Decimal @db.Decimal(12,2) @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orderItemModifications OrderItemModification[]

  modificationGroup ModificationGroup @relation(fields: [modificationGroupId], references: [id], onDelete: Cascade)
  @@unique([modificationGroupId, name])
}

model Order{
  id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  customerId String @db.Uuid 
  restaurantId String @db.Uuid
  orderDate DateTime @default(now())
  status String @default("pending")
  subtotal Decimal @db.Decimal(12,2) 
  totalAmount Decimal @db.Decimal(12,2) 
  orderFee Decimal @db.Decimal(12,2) 
  freeDelivery Boolean    @default(false)
  address String
  phoneNumber String
  comments String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  restaurant Restaurant @relation(fields: [restaurantId], references: [id])
  customer Customer @relation(fields: [customerId],references: [id])
  orderItems OrderItem[]
}

model OrderItem{
  id String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  menuItemId String @db.Uuid
  orderId String @db.Uuid 
  quantity Int
  price Decimal @db.Decimal(12,2) @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orderItemModifications OrderItemModification[]

  menuItem MenuItem @relation(fields: [menuItemId],references: [id])
  order Order @relation(fields: [orderId],references: [id])
}

model OrderItemModification{
  id String @id @default(uuid()) @db.Uuid
  orderItemId String @db.Uuid
  modificationId String @db.Uuid
  quantity Int
  price Decimal @db.Decimal(12,2) @default(0)

  orderItem OrderItem @relation(fields: [orderItemId], references: [id])
  modification Modification @relation(fields: [modificationId], references: [id])
}

model DeliveryTemplateFee{
  id String @id @default(uuid()) @db.Uuid
  restaurantId String @db.Uuid
  minOrderAmount Decimal @db.Decimal(12,2) @default(0)
  deliveryFee Decimal @db.Decimal(12,2) @default(0)

  restaurant Restaurant @relation(fields: [restaurantId], references: [id])

  @@unique([restaurantId, minOrderAmount])
}

model MenuItemCategory{
  id String @id @default(uuid()) @db.Uuid
  name String 
  restaurantId String @db.Uuid

  restaurant Restaurant @relation(fields: [restaurantId], references: [id])

  menuItems MenuItem[]

  @@unique([restaurantId, name])

}